{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "SudoLang",
  "patterns": [
    { "include": "#markdown-headers" },
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#functions" },
    { "include": "#variables" },
    { "include": "#operators" },
    { "include": "#commands" },
    { "include": "#interfaces" },
    { "include": "#expressions" }
  ],
  "repository": {
    "markdown-headers": {
      "patterns": [
        {
          "name": "markup.heading.sudolang",
          "match": "^(#{1,6})\\s+(.*)$",
          "captures": {
            "1": { "name": "punctuation.definition.heading.sudolang" },
            "2": { "name": "entity.name.section.sudolang" }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.sudolang",
          "match": "\\b(if|else|otherwise|throw|error|while|loop|where|for each|in|function|fn|range|match|case|default|defaults|constraint|constraints|require|requirements|warn|warnings|interface)\\b"
        },
        {
          "name": "keyword.control.sudolang",
          "match": "\\b/[a-zA-Z0-9]+\\b"
        },
        {
          "name": "variable.language.sudolang",
          "match": "\\$\\w+"
        },
        {
          "name": "keyword.operator.assignment.sudolang",
          "match": "="
        },
        {
          "name": "keyword.operator.logical.sudolang",
          "match": "\\b(&&|\\|\\||!|xor)\\b"
        },
        {
          "name": "keyword.operator.math.sudolang",
          "match": "[-+*/^%]"
        },
        {
          "name": "keyword.operator.math.sudolang",
          "match": "\\b(cap|cup)\\b"
        },
        {
          "name": "keyword.command.sudolang",
          "match": "\\b(ask|log|take|select|describe|explain|instruct|run|begin)\\b"
        },
        {
          "name": "keyword.operator.arrow.sudolang",
          "match": "=>"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sudolang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "variable.other.sudolang",
              "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
            },
            {
              "name": "constant.character.escape.sudolang",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.template.sudolang",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "variable.other.sudolang",
              "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
            },
            {
              "name": "constant.character.escape.sudolang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.sudolang",
          "match": "//.*$"
        },
        {
          "name": "comment.block.sudolang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.sudolang",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.sudolang",
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.sudolang",
          "match": "\\+|-|\\*|/|%|\\^|&&|\\|\\||!|<|>|<=|>=|==|!=|\\|>|=|\\+=|-=|\\*=|/=|\\bcap\\b|\\bcup\\b|\\bxor\\b"
        }
      ]
    },
    "commands": {
      "patterns": [
        {
          "name": "keyword.other.command.sudolang",
          "match": "/[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    "interfaces": {
      "patterns": [
        {
          "begin": "\\b([A-Z][a-zA-Z0-9]*)\\s*\\{",
          "beginCaptures": {
            "1": { "name": "entity.name.type.interface.sudolang" }
          },
          "end": "\\}",
          "patterns": [
            { "include": "#expressions" },
            {
              "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
              "name": "variable.other.property.sudolang"
            }
          ]
        }
      ]
    },
    "expressions": {
      "patterns": [
        { "include": "#strings" },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(=)\\s*",
          "captures": {
            "1": { "name": "variable.other.assignment.sudolang" },
            "2": { "name": "keyword.operator.assignment.sudolang" }
          }
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "name": "meta.object.sudolang",
          "patterns": [
            { "include": "#expressions" }
          ]
        },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*:",
          "captures": {
            "1": { "name": "variable.other.property.sudolang" }
          }
        },
        {
          "match": "\\b\\d+(\\.\\d+)?\\b",
          "name": "constant.numeric.sudolang"
        },
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language.boolean.sudolang"
        },
        {
          "match": "\\bnull\\b",
          "name": "constant.language.null.sudolang"
        }
      ]
    }
  },
  "scopeName": "source.sudo"
}
